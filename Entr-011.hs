   -- Демонстрация решения задач 1, 2, 3, 5 (из раздела 3)
   -- домашнего задания
   --
   -- Автор: Швецкий М.В. (09-10.11.2020, 19:09)
   -- ******************************************
   import List

   -- **************************************************
   -- Функция возвращает все требуемые трёхзначные нату-
   -- ральные числа для задач из домашнего задания
   -----------------------------------------------
   -- (1) Неубывающие цифры...
   ------------------------------------------
   -- abc = [[x,y,z] | x <- [1..9], y <- [0..9],
   --                               z <- [0..9], x<=y && y<=z]
   -----------------------------------------------------------
   -- (2) Сумма цифр больше 10...
   ------------------------------------------
   abc = [[x,y,z] | x <- [1..9], y <- [0..9], 
                                 z <- [0..9], x+y+z>10]

   -- *************************************************
   -- Функция возвращает энтропию по Шеннону для каждой 
   -- из трёх цифр трёхзначного числа;
   -- при этом большая энтропия некоторой цифры означа-
   -- ет, что цифра "несёт" больше информации о числе
   --------------------------------------------------
   res_1_2 = map entr2 [test1,test2,test3]
        where test1 = prob $ map (\x -> intToDigit $ fromInteger x)
                                 (map (\n -> head n) abc)          
              test2 = prob $ map (\x -> intToDigit $ fromInteger x)
                                 (map (\n -> head $ tail n) abc)   
              test3 = prob $ map (\x -> intToDigit $ fromInteger x)
                                 (map (\n -> last n) abc)          

   ------------------------------------------------------
   -- (3) Сумма первой и второй, второй и третьей цифр...
   ---------------------------------------------------------
   lst_3 = [[x,y,z] | x <- [1..9], y <- [0..9], z <- [0..9]]
   bca_3 = map (\[a,b,c] -> (a+b,b+c)) lst_3
   fff_3 = concatMap (\x -> show x) $ map (\(a,b) -> a) bca_3
   lll_3 = concatMap (\x -> show x) $ map (\(a,b) -> b) bca_3
   res_3 = map entr2 [test1,test2]
       where test1 = prob fff_3; test2 = prob lll_3

   ---------------------------------------------
   -- (5) Трёхзначные числа с нечётными цифрами.
   --     Cумма квадратов цифр числа...
   ------------------------------------------------------
   lst_5 = [[x,y,z] | x <- [1,3,5,7,9], y <- [1,3,5,7,9], 
                                        z <- [1,3,5,7,9]]
   len_5 = length lst_5
   bca_5 = map (\x -> (head x,length x))
                 $ groupBy (==) $ sort 
                 $ map (\[a,b,c] -> a^2+b^2+c^2)
                       lst_5
   qqq = map (\(a,b) -> (a,
                         -(0.0+fromInt b)/(0.0+fromInt len_5)*            
                         logBase 2.0 ((0.0+fromInt b)/(0.0+fromInt len_5))
                        )) bca_5
   res_5 = map (\(a,b) -> (b,a)) $ 
               sort $ map (\(a,b) -> (b,a)) 
                          qqq

   -- ****************************************************
   -- Функция возвращает энтропию дискретного источника по
   -- известному ансамблю lst, представляющем собой список
   -- пар (в битах)
   -----------------------------
   entr2 lst = -sum (zipWith (*)
                             lst1       
                             (map (\x -> logBase 2.0 x) lst1))
        where lst1 = map (\x -> snd x) lst

   -- ***********************************************
   -- Функция возвращает результат частотного анализа
   -- букв текста word в виде списка пар вида:
   --
   -- (Частота появления символа в слове, 
   --  Строка, состоящая из этого символа)
   ---------------------------------------
   prob word = sort [(x:"",
                      fromInt (length (findIndices (==x) word)) 
                              / (fromInt (length word)))
                    | x <- nub word]
